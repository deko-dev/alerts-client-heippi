version: "3.3"
services:
  frontend:
    image: ${CI_REGISTRY_IMAGE}:${TAG_ENVIRONMENT}-${CI_COMMIT_SHA}
    deploy:
      labels:
        traefik.enable: "true"
        traefik.docker.network: ${TRAEFIK_DOCKER_NETWORK}
        traefik.constraint-label: ${TRAEFIK_CONSTRAINT_LABEL}
        traefik.http.routers.${STACK_NAME_DEPLOY}-frontend-http.rule: Host(`${TRAEFIK_FRONTEND_RULE_HOST}`)
        traefik.http.routers.${STACK_NAME_DEPLOY}-frontend-http.entrypoints: http
        traefik.http.routers.${STACK_NAME_DEPLOY}-frontend-http.middlewares: https-redirect
        traefik.http.routers.${STACK_NAME_DEPLOY}-frontend-https.rule: Host(`${TRAEFIK_FRONTEND_RULE_HOST}`)
        traefik.http.routers.${STACK_NAME_DEPLOY}-frontend-https.entrypoints: https
        traefik.http.routers.${STACK_NAME_DEPLOY}-frontend-https.tls: "true"
        traefik.http.routers.${STACK_NAME_DEPLOY}-frontend-https.tls.certresolver: le
        traefik.http.services.${STACK_NAME_DEPLOY}-frontend.loadbalancer.server.port: 80
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    networks:
      default: null
      ${TRAEFIK_DOCKER_NETWORK}: null
    depends_on:
      - backend

networks:
  ${TRAEFIK_DOCKER_NETWORK}:
    external: true
